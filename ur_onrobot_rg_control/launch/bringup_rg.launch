<launch>
    <arg name="device"          default="/tmp/ttyUR"    doc="MODBUS Serial device, when using socat with the the RS-485 URCap"/>
    <arg name="gripper"         default="rg2"/>
    <arg name="changer_addr"    default="65"/>
    <arg name="dummy"           default="false"/>

    <param name="/onrobot/device"           value="$(arg device)" />
    <param name="/onrobot/gripper"          value="$(arg gripper)" />
    <param name="/onrobot/changer_addr"     value="$(arg changer_addr)" />
    <param name="/onrobot/dummy"            value="$(arg dummy)" />

    <node   name="OnRobotRGStatusListener"
            ns="/onrobot_rg"
            pkg="onrobot_rg_control"
            type="OnRobotRGStatusListener.py"
            output="log"/>

    <node   name="OnRobotRGSerialNode"
            ns="/onrobot_rg"
            pkg="ur_onrobot_rg_control"
            type="OnRobotRGSerialNode.py"
            respawn="True"
            output="log"/>
  
    <node   name="ur_onrobot_rg_control"
            ns="/onrobot_rg"
            pkg="ur_onrobot_rg_control"
            type="ur_onrobot_rg_control_node"
            respawn="True"
            output="screen"/>

    <node   name="MessageBridge"
            ns="/onrobot_rg"
            pkg="ur_onrobot_rg_control"
            type="MessageBridge.py"
            respawn="True"
            output="screen"/>

    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find ur_onrobot_rg_control)/config/rg_controllers.yaml" command="load"/>

    <!-- Start ROS controllers -->
    <node name="rg_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
        ns="/onrobot_rg"
        output="screen" args="joint_state_controller gripper_controller"/>

    <node name="rg_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
        ns="/onrobot_rg"
        respawn="true" output="screen" />

</launch>
